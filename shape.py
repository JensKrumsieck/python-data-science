import numpy as np

temp = [
    [
        [-1.5, -1.2, 0.0, 2.1, 24.2, 188.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 128.0]
    ],
    [
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0]
    ],
    [
        [-1.5, -1.2, 0.0, 2.1, 24.2, 198.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 178.0]
    ],
    [
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0],
        [-1.5, -1.2, 0.0, 2.1, 24.2, 18.0]
    ],
]
np_temp = np.array(temp)
print(np_temp.shape)  # (4, 3, 6)
print(np_temp.dtype)  # float64

# select first row 2 times, and 2nd row 2 time with col 0 and 2 each
rows = np.array([
    [0, 0], [2, 2]
], dtype=np.intp)
columns = np.array([
    [0, 2], [0, 2]
], dtype=np.intp)

print(np_temp[rows, columns])
#
# [[[ -1.5  -1.2   0.    2.1  24.2 188. ]
#  [ -1.5  -1.2   0.    2.1  24.2 128. ]]
#
# [[ -1.5  -1.2   0.    2.1  24.2 198. ]
#  [ -1.5  -1.2   0.    2.1  24.2 178. ]]]
#

# [[array([ -1.5,  -1.2,   0. ,   2.1,  24.2, 188. ]), array([ -1.5,  -1.2,   0. ,   2.1,  24.2, 128. ])], [array([ -1.5,  -1.2,   0. ,   2.1,  24.2, 198. ]), array([ -1.5,  -1.2,   0. ,   2.1,  24.2, 178. ])]]
print([[np_temp[0][0], np_temp[0][2]], [np_temp[2][0], np_temp[2][2]]])

z = np.array([
    [0, 0], [1, 4]
], dtype=np.intp)

print(np_temp[rows, columns, z])
#
# [[-1.5 -1.5]
# [-1.2 24.2]]
#

# FLATTEN
print(np_temp.flatten())  # column (C order)
#
# [ -1.5  -1.2   0.    2.1  24.2 188.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 128.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2  18.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 198.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 178.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2  18.   -1.5  -1.2   0.    2.1  24.2  18. ]
#

print(np_temp.flatten(order="F"))  # row (fortran order)
#
# [ -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5  -1.5
#  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2  -1.2
#   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
#   2.1   2.1   2.1   2.1   2.1   2.1   2.1   2.1   2.1   2.1   2.1   2.1
#  24.2  24.2  24.2  24.2  24.2  24.2  24.2  24.2  24.2  24.2  24.2  24.2
# 188.   18.  198.   18.   18.   18.   18.   18.  128.   18.  178.   18. ]
#

# RAVEL
print(np_temp.ravel())
#
# [ -1.5  -1.2   0.    2.1  24.2 188.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 128.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2  18.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 198.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2 178.   -1.5  -1.2   0.    2.1  24.2  18.
#  -1.5  -1.2   0.    2.1  24.2  18.   -1.5  -1.2   0.    2.1  24.2  18. ]
#
# Flatten => new array, Ravel => "same" memory region = faster
